input UserRoleInput {
    # data follows UserRole type format and gone through JSON.stringify process
    data: String!
}

type UserRole {
  ID: Int
  NAME: String
  # Indicates current record belongs to which module
  MODULE: String
  # Status of the current record. Active or inactive
  STATUS: String
  DATA_VIEW: String
  USER_MODULE: [String]
  COMPANY_MODULE: [String]
  SURVEY_MODULE: [String]
  ASSESSMENT_MODULE: [String]
  GETX_MODULE: [String]
  ROLES_MODULE: [String]
  ELSA_MODULE: [String]
  CREATED_AT: String
  CREATED_BY: String
  UPDATED_AT: String
  UPDATED_BY: String
}

type Query {
  allUserRole: [UserRole!]!
  oneUserRole(ID: Int!): UserRole!
}

type Mutation {
  createUserRole(input: UserRoleInput!): UserRole!
  updateUserRole(ID: Int!, input: UserRoleInput!): UpdateResp
  deleteUserRole(ID: Int!): DeleteResp
}