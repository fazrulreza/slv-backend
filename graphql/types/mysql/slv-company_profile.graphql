
"""
    - input format for Company profile API
"""
input CompanyProfileInput {
    # data follows CompanyProfile type format and gone through JSON.stringify process
    data: String!
}

"""
    - available company fields that can be queried. 
    - Name reflects columns in DB
"""
type CompanyProfile {
  ID: String
  LOGO: [FileType]
  ENTITY_NAME: String
  ENTRY_DATE: String
  REGISTRATION_NO: String
  NEW_REGISTRATION_NO: String
  INCORPORATION_DATE: String
  # Flag for Bumiputera status
  BUMI_STATUS: String
  # Flag for Woman Owned Company
  WOMAN_OWNED: String
  # Flag for eligibility for GETX program
  GETX_FLAG: String
  # Indicates current record belongs to which module
  MODULE: [String]
  ENTITY_STATUS: String
  ENTITY_TYPE: String
  ADDRESS_LINE_1: String
  ADDRESS_LINE_2: String
  POSTCODE: String
  STATE: String
  PHONE: String
  EMAIL: String
  FIN_AGENCY_1: String
  FIN_AGENCY_2: String
  FIN_AGENCY_3: String
  NATURE_OF_BUSINESS: String
  SECTOR: String
  DIVISION: String
  SECTION: String
  GROUP: String
  CLASS: String
  MSIC: String
  SME_CLASS: String
  # Flag for completion status of Survey
  SURVEY_DONE: String
  # Flag for completion status of Assessment
  ASSESSMENT_DONE: String
  # Flag for completion status of GETX KPI settings
  KPI_DONE: String
  # Owner of the company
  OWNER: String
  # Created timestamp. Auto generated in database. Not needed for create / update mutation
  CREATED_AT: String
  # Creator. Auto generated in database. Not needed for create / update mutation
  CREATED_BY: String
  # Updated timestamp. Auto generated in database. Not needed for create / update mutation
  UPDATED_AT: String
  # Updater. Auto generated in database. Not needed for create / update mutation
  UPDATED_BY: String
}

"""
    - combine modules with MSIC.
    - used during company create
"""
type ModulesWithMSIC {
  allMSIC: [MSICResult!]!,
  allModuls: [Modul!]!,
}

"""
    - combine company profile with MSIC.
    - used during company view / update
"""
type CompanyProfileWithMSIC {
  allMSIC: [MSICResult!]!,
  allModuls: [Modul!]!,
  company: CompanyProfile!
}

"""
    - summary of total profile, survey, and assessment made per user of all user
"""
type UserReportList {
  USER: String,
  ROLE_NAME: String,
  STATUS: String,
  PROFILE_COUNT: Int,
  SURVEY_COUNT: Int,
  ASSESSMENT_COUNT: Int,
}

"""
    - summary of company by state
    - only applicable to those that has filled up to assessment
"""
type StateList {
  STATE: String,
  COUNT: Int,
  COUNT_COLOR: Int,
}

type Query {
"""
    - retrieve company data for a single company
    - usually used for view / update data
"""
    oneCompany (ID: String!): CompanyProfileWithMSIC!
"""
    - retrieve all companies for company listing
"""
    allCompanies(filter: String): [CompanyProfile!]!
"""
    - retrieve summary of all user activities
"""
    userReports: [UserReportList!]!
"""
    - retrieve summary of company by state
"""
    stateReports(filter: String): [StateList!]!
}

type Mutation {
"""
    - check if company exist in DB
"""
  checkCompany (NAME: String!): String
"""
    - create company data
"""
  createCompany(input: CompanyProfileInput!): CompanyProfile!
"""
    - update company data
"""
  updateCompany(ID: String!, input: CompanyProfileInput!): UpdateResp
"""
    - delete company data
    - deleting company data will automatically delete all data related to the company
"""
  deleteCompany(ID: String!): DeleteResp
"""
    - unlist company from getx program
"""
  unlistCompany(ID: String!): UpdateResp
}
