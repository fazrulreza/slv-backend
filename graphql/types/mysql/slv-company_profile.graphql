input CompanyProfileInput {
    # data follows CompanyProfile type format and gone through JSON.stringify process
    data: String!
}

type CompanyProfile {
  ID: String
  LOGO: [FileType]
  ENTITY_NAME: String
  ENTRY_DATE: String
  REGISTRATION_NO: String
  NEW_REGISTRATION_NO: String
  INCORPORATION_DATE: String
  # Flag for Bumiputera status
  BUMI_STATUS: String
  # Flag for Woman Owned Company
  WOMAN_OWNED: String
  # Flag for eligibility for GETX program
  GETX_FLAG: String
  # Indicates current record belongs to which module
  MODULE: String
  ENTITY_STATUS: String
  ENTITY_TYPE: String
  ADDRESS_LINE_1: String
  ADDRESS_LINE_2: String
  POSTCODE: String
  STATE: String
  PHONE: String
  EMAIL: String
  FIN_AGENCY_1: String
  FIN_AGENCY_2: String
  FIN_AGENCY_3: String
  NATURE_OF_BUSINESS: String
  SECTOR: String
  DIVISION: String
  SECTION: String
  GROUP: String
  CLASS: String
  MSIC: String
  SME_CLASS: String
  # Flag for completion status of Survey
  SURVEY_DONE: String
  # Flag for completion status of Assessment
  ASSESSMENT_DONE: String
  # Flag for completion status of GETX KPI settings
  KPI_DONE: String
  OWNER: String
  CREATED_AT: String
  CREATED_BY: String
  UPDATED_AT: String
  UPDATED_BY: String
}

type CompanyProfileWithMSIC {
  allMSIC: [MSICResult!]!,
  company: CompanyProfile!
}

type UserReportList {
  USER: String,
  ROLE_NAME: String,
  STATUS: String,
  PROFILE_COUNT: Int,
  SURVEY_COUNT: Int,
  ASSESSMENT_COUNT: Int,
}

type StateList {
  STATE: String,
  COUNT: Int,
  COUNT_COLOR: Int,
}

type Query {
    oneCompany (ID: String!): CompanyProfileWithMSIC!
    allCompanies: [CompanyProfile!]!
    userReports: [UserReportList!]!
    stateReports: [StateList!]!
}

type Mutation {
  checkCompany (NAME: String!): String
  createCompany(input: CompanyProfileInput!): CompanyProfile!
  updateCompany(ID: String!, input: CompanyProfileInput!): UpdateResp
  deleteCompany(ID: String!): DeleteResp
  unlistCompany(ID: String!): UpdateResp
}
